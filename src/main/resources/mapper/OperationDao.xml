<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyjd.cts.dao.OperationDao">

    <sql id="base">
          id, operateName, remarkDescription
    </sql>

    <resultMap type="com.zyjd.cts.model.Operation" id="res">
         <id property="id" column="id"/>      
         <result property="operateName" column="operateName"/>
		 <result property="remarkDescription" column="remarkDescription" />
	</resultMap>

    <insert id="add" parameterType="Operation" useGeneratedKeys="true" keyProperty="id"  keyColumn="id">
         insert into operation
         <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>       
            <if test="operateName != null">
                operateName,
            </if>
			<if test="remarkDescription != null">
				remarkDescription,
			</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>         
            <if test="operateName != null">
                #{operateName},
            </if>
			<if test="remarkDescription != null">
				#{remarkDescription},
			</if>
        </trim>
    </insert>

	<delete id="delete" parameterType="int">
		delete from operation where id = #{id}
	</delete>

	<update id="update" parameterType="Operation">
		update operation
		<set>
			<if test="operateName != null">
				operateName = #{operateName},
			</if>
			<if test="remarkDescription != null">
				remarkDescription = #{remarkDescription},
			</if>
		</set>
		where id = #{id}
	</update>

	<select id="findById" parameterType="int" resultMap="res">
		select <include refid="base" /> from operation where id = #{id}
	</select>

    <select id="findAll" resultMap="res">
		select <include refid="base" /> from operation
	</select>

	<select id="findByCondition" parameterType="Operation" resultMap="res">
		select <include refid="base" /> from operation
		<where>
			<!--模糊查询-->
			<if test="searchString != null">
				and (operateName like concat(concat('%', #{searchString}), '%')
				or remarkDescription like concat(concat('%', #{searchString}), '%'))
			</if>
		</where>
	</select>

	<select id="findByConditions" parameterType="Operation" resultMap="res">
		select <include refid="base" /> from operation
		<where>
			<!--非模糊查询-->
			<if test="isFuzzy==null and operateName != null">
				and operateName = #{operateName}
			</if>
			<!--非模糊查询-->
			<if test="isFuzzy!=null and operateName != null">
				and operateName like concat(concat('%', #{operateName}), '%')
			</if>
		</where>
	</select>

	<select id="findByConditionPage" parameterType="Operation" resultMap="res">
		select <include refid="base" /> from operation
		<where>
			<!--模糊查询-->
			<if test="searchString != null">
				and (operateName like concat(concat('%', #{searchString}), '%')
				or remarkDescription like concat(concat('%', #{searchString}), '%'))
			</if>
		</where>
		<if test="start !=null and limit != null">
			order by id limit #{start},#{limit};
		</if>
	</select>

</mapper>